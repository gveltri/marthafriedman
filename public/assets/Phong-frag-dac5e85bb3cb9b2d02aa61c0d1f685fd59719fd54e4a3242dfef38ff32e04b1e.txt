uniform float inflate;
uniform vec3 ambient;
uniform vec3 diffuse;
uniform vec3 specular;
uniform sampler2D texture;
uniform vec3 lightDir;
uniform float shininess;

varying vec3 vNormal;
varying vec3 vPosition;
varying vec2 vUv;

void main() {
    // ----------- STUDENT CODE BEGIN ------------
    vec3 n = normalize(vNormal);
    vec3 l = normalize(lightDir);
    // https://asalga.wordpress.com/2012/09/23/understanding-vector-reflection-visually/

    // specular
    vec3 r = normalize(2.0 * dot(l, n) * n - l);
    vec3 v = normalize(cameraPosition - vPosition);
    // Add EPS = .001
    float spec = pow(max(-0.001, dot(r,v)), (shininess + .001));

    //diffuse
    float diff = dot(n, l);
    vec3 dd = diffuse;
    dd *= vec3( texture2D(texture, vUv) );

    gl_FragColor = vec4( ambient + dd * diff + specular * spec, 1.0 );
    // ----------- STUDENT CODE END ------------
}
